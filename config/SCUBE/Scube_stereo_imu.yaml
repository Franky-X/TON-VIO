%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/imu/data"
image0_topic: "/HKRCams/Cam0"
image1_topic: "/HKRCams/Cam1"
output_path: "~/output"

cam0_calib: "cam0_pinhole.yaml"
cam1_calib: "cam1_pinhole.yaml"
image_width: 1280
image_height: 1024
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# [  0.9244512,  0.1766207,  0.3379275;
#    0.3787647, -0.3233282, -0.8671771;
#   -0.0438999,  0.9296580, -0.3657989 ]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [-0.007421306064226242864, -0.015817586722059518, 0.99984735243265658814, 0.03062446487603490106,
          -0.99997226958653354419, -0.00050244773818775545, -0.007430181978216624309, 0.048817651287173312617,
          0.00061989858856386853785, -0.99987476790674253385, -0.015813419275393372136, -0.011088377668432702637,
          0.0, 0.0, 0.0, 1.0]


body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [-0.00892332997343714869, -0.021813670772608454, 0.99972223039682726016, 0.08195895971978352183,
          -0.99994329204204319519, -0.00561684160039362796, -0.0090478611038574397437, -0.094904424484512725867,
          0.0058126484758470931143, -0.9997462752408022061, -0.02176231283287450519, -0.0073132522077695686525,
          0.0, 0.0, 0.0, 1.0]


#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 130            #130 for handheld # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 1  # max solver itration time (ms), to guarantee real time
max_num_iterations: 30   # max solver itrations, to guarantee real time; 9 for outdoor and SI01 
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.2          # accelerometer measurement noise standard deviation. 
# gyr_n: 0.05         # gyroscope measurement noise standard deviation.     
# acc_w: 0.02         # accelerometer bias random work noise standard deviation.  
# gyr_w: 4.0e-5       # gyroscope bias random work noise standard deviation.     
# g_norm: 9.81007     # gravity magnitude

acc_n: 0.1          # accelerometer measurement noise standard deviation. 
gyr_n: 0.001         # 0.001 for handheld indoor gyroscope measurement noise standard deviation.     
acc_w: 0.001        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 1                        # online estimate time offset between camera and imu
weight_td: 1
omn_td : 1
# td_cov: 5.0e+5                    #AirSim_Car_10m_s_stereo_turn_2
td_cov: 0.0                     #5.0e+05 indoor ;5.0e+02 outdoor 3; 2.5e+02 outdoor2
td: 0.0                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
